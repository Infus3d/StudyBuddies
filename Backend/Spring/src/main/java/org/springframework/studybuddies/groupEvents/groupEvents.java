package org.springframework.studybuddies.groupEvents;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.springframework.core.style.ToStringCreator;
import org.springframework.studybuddies.group.Groups;
import org.springframework.studybuddies.members.MembersTable;

import io.swagger.annotations.ApiModelProperty;

/**
 * @author Ryan Sand and Brady Heath
 */

@Entity
@Table(name = "groupEvents")
public class groupEvents {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "groupEventid")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "Autogenerated ID", name = "GEid", required = true, value = "2")
	private Integer GEid;

	@Column(name = "time")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "The time the group event was posted", name = "time", required = true, value = "2:57pm")
	private String time;

	@Column(name = "message")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "The text message that was attached with the group event", name = "message", required = true, value = "Meeting with team today!")
	private String message;


	@Column(name = "GeventMemberId")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "The number associated with the member that posted the group event", name = "GeventMemberId", required = true, value = "1")
	private Integer GeventMemberId;
	
	@Column(name = "eventGroupId")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "The number associated with the group that posted the group event", name = "eventGroupId", required = true, value = "1")
	private Integer eventGroupId;

	@ManyToOne
	@JoinColumn(name = "GeventMemberId", referencedColumnName = "memberId", nullable = false, insertable = false, updatable = false)
	private MembersTable memberSave;
	
	@ManyToOne
	@JoinColumn(name = "eventGroupId", referencedColumnName = "id", nullable = false, insertable = false, updatable = false)
	private Groups groupSave;

	public groupEvents() {

	}

	public groupEvents(int GEid, String time, String message, int GeventMemberId, int eventGroupId) {
		this.GEid = GEid;
		this.time = time;
		this.message = message;
		this.GeventMemberId = GeventMemberId;
		this.eventGroupId = eventGroupId;
	}
	
	
	

	// ID
	public Integer getId() {
		return GEid;
	}

	public void setId(Integer PEid) {
		this.GEid = PEid;
	}

	// Time
	public String getTime() {
		return this.time;
	}

	public void setTime(String time) {
		this.time = time;
	}

	// Message
	public String getMessage() {
		return this.message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	
	// Member Id
	public Integer geteventMemberId() {
		return this.GeventMemberId;
	}

	public void seteventMemberId(int eventMemberId) {
		this.GeventMemberId = eventMemberId;
	}
	
	public MembersTable getMembersDetail() {
		return memberSave;
	}
	
	public Groups getGroupsDetail() {
		return groupSave;
	}
	
	public Integer geteventGroupId() {
		return this.eventGroupId;
	}

	public void seteventGroupId(int eventGroupId) {
		this.eventGroupId = eventGroupId;
	}

	@Override
	public String toString() {
		return new ToStringCreator(this)

				.append("id", this.getId()).append("time", this.getTime())
				.append("message", this.getMessage()).toString();
	}
}
