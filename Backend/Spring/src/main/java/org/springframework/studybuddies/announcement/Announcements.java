package org.springframework.studybuddies.announcement;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.springframework.core.style.ToStringCreator;
import org.springframework.studybuddies.group.Groups;
import org.springframework.studybuddies.members.MembersTable;

import io.swagger.annotations.ApiModelProperty;

/**
 * @author Ryan Sand and Brady Heath
 */

@Entity
@Table(name = "announcements")
public class Announcements {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "Autogenerated ID", name = "id", required = true, value = "2")
	private Integer id;

	@Column(name = "time")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "The time the message was posted", name = "time", required = true, value = "12:50pm")
	private String time;

	@Column(name = "message")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "The text message that was attached with the announcement", name = "message", required = true, value = "Welcome to COM S 309!")
	private String message;

	@Column(name = "groupId")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "The number associated with the group the members are in", name = "groupId", required = true, value = "1")
	private Integer groupId;

	@Column(name = "memberId")
	@NotFound(action = NotFoundAction.IGNORE)
	@ApiModelProperty(notes = "The number associated with the member that posted the announcement", name = "groupId", required = true, value = "1")
	private Integer memberId;

	@ManyToOne
	@JoinColumn(name = "groupId", referencedColumnName = "id", nullable = false, insertable = false, updatable = false)
	private Groups groupSave;

	@ManyToOne
	@JoinColumn(name = "memberId", referencedColumnName = "id", nullable = false, insertable = false, updatable = false)
	private MembersTable memberSave;

	public Announcements() {

	}

	public Announcements(int id, String time, String message, int groupId, int memberId) {
		this.id = id;
		this.time = time;
		this.message = message;
		this.groupId = groupId;
		this.memberId = memberId;
	}

	// ID
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	// Time
	public String getTime() {
		return this.time;
	}

	public void setTime(String time) {
		this.time = time;
	}

	// Message
	public String getMessage() {
		return this.message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	// Group Id
	public Integer getGroupId() {
		return this.groupId;
	}

	public void setGroupId(int groupId) {
		this.groupId = groupId;
	}

	// Group Id
	public Integer getMemberId() {
		return this.memberId;
	}

	public void setMemberId(int memberId) {
		this.memberId = memberId;
	}

	@Override
	public String toString() {
		return new ToStringCreator(this)

				.append("id", this.getId()).append("time", this.getTime())
				.append("message", this.getMessage()).toString();
	}
}
